/*
 *  @author  Mahsa Noroozi
 */
//---------------------------------------------------------------------------------------------------------------------
/*  The "Solve" class solves multi commodity flow problems in linear programming using a simplex algorithm.
 *  This class uses Graphx to represent a random network with nodes and edges.
 *  The constraints of MCF are produced automatically from the nodes and edge capacities in another class: SolveMCF.
 *  We assume the graph fully connected.
 *  Source and destination are clearly defined.
 */
//---------------------------------------------------------------------------------------------------------------------
package org.apache.spark.mllib.optimization.mip.lp

import scala.math.abs
import scala.util.control.Breaks.{breakable, break}
import java.io._
import org.apache.spark.{SparkContext, SparkConf}
import org.apache.spark.graphx._
import org.apache.spark.rdd._
import org.apache.spark.graphx.lib

object SolveExample5of25 extends Serializable {

        def main(args: Array[String]): Unit = {
                val conf = new SparkConf().setAppName("Solve MCF 5 of 25 with Simplex")
                val sc = new SparkContext(conf)

                // --------------------Define the substrate network using nodes and edges------------------------------
                var svertexArray = Array((1L,("1",6)),(2L,("2",6)),(3L,("3",9)),(4L,("4",2)),(5L,("5",2)),(6L,("6",7)),(7L,("7",0)),(8L,("8",7)),(9L,("9",6)),(10L,("10",9)),(11L,("11",4)),(12L,("12",3)),(13L,("13",6)),(14L,("14",9)),(15L,("15",6)),(16L,("16",7)),(17L,("17",7)),(18L,("18",2)),(19L,("19",1)),(20L,("20",6)),(21L,("21",8)),(22L,("22",1)),(23L,("23",9)),(24L,("24",1)),(25L,("25",0)))
                val svertexRDD: RDD[(VertexId, (String, Int))] = sc.parallelize(svertexArray)

                var sedgeArray = Array(Edge(1,2,(9,1000)),
Edge(1,3,(9,1000)),
Edge(1,4,(7,1000)),
Edge(1,5,(1,1000)),
Edge(1,6,(2,1000)),
Edge(1,7,(5,1000)),
Edge(1,8,(4,1000)),
Edge(1,9,(9,1000)),
Edge(1,10,(8,1000)),
Edge(1,11,(4,1000)),
Edge(1,12,(3,1000)),
Edge(1,13,(10,1000)),
Edge(1,14,(9,1000)),
Edge(1,15,(1,1000)),
Edge(1,16,(5,1000)),
Edge(1,17,(7,1000)),
Edge(1,18,(1,1000)),
Edge(1,19,(4,1000)),
Edge(1,20,(8,1000)),
Edge(1,21,(9,1000)),
Edge(1,22,(10,1000)),
Edge(1,23,(7,1000)),
Edge(1,24,(4,1000)),
Edge(1,25,(2,1000)),
Edge(2,1,(9,1000)),
Edge(2,3,(1,1000)),
Edge(2,4,(5,1000)),
Edge(2,5,(9,1000)),
Edge(2,6,(2,1000)),
Edge(2,7,(10,1000)),
Edge(2,8,(7,1000)),
Edge(2,9,(10,1000)),
Edge(2,10,(3,1000)),
Edge(2,11,(5,1000)),
Edge(2,12,(2,1000)),
Edge(2,13,(10,1000)),
Edge(2,14,(5,1000)),
Edge(2,15,(2,1000)),
Edge(2,16,(1,1000)),
Edge(2,17,(10,1000)),
Edge(2,18,(10,1000)),
Edge(2,19,(10,1000)),
Edge(2,20,(1,1000)),
Edge(2,21,(1,1000)),
Edge(2,22,(4,1000)),
Edge(2,23,(3,1000)),
Edge(2,24,(7,1000)),
Edge(2,25,(1,1000)),
Edge(3,1,(9,1000)),
Edge(3,2,(1,1000)),
Edge(3,4,(10,1000)),
Edge(3,5,(3,1000)),
Edge(3,6,(3,1000)),
Edge(3,7,(1,1000)),
Edge(3,8,(7,1000)),
Edge(3,9,(10,1000)),
Edge(3,10,(7,1000)),
Edge(3,11,(10,1000)),
Edge(3,12,(5,1000)),
Edge(3,13,(6,1000)),
Edge(3,14,(9,1000)),
Edge(3,15,(3,1000)),
Edge(3,16,(4,1000)),
Edge(3,17,(6,1000)),
Edge(3,18,(10,1000)),
Edge(3,19,(8,1000)),
Edge(3,20,(10,1000)),
Edge(3,21,(8,1000)),
Edge(3,22,(10,1000)),
Edge(3,23,(10,1000)),
Edge(3,24,(1,1000)),
Edge(3,25,(5,1000)),
Edge(4,1,(7,1000)),
Edge(4,2,(5,1000)),
Edge(4,3,(10,1000)),
Edge(4,5,(3,1000)),
Edge(4,6,(3,1000)),
Edge(4,7,(3,1000)),
Edge(4,8,(1,1000)),
Edge(4,9,(4,1000)),
Edge(4,10,(4,1000)),
Edge(4,11,(6,1000)),
Edge(4,12,(10,1000)),
Edge(4,13,(4,1000)),
Edge(4,14,(1,1000)),
Edge(4,15,(4,1000)),
Edge(4,16,(6,1000)),
Edge(4,17,(2,1000)),
Edge(4,18,(3,1000)),
Edge(4,19,(8,1000)),
Edge(4,20,(3,1000)),
Edge(4,21,(1,1000)),
Edge(4,22,(3,1000)),
Edge(4,23,(7,1000)),
Edge(4,24,(2,1000)),
Edge(4,25,(7,1000)),
Edge(5,1,(1,1000)),
Edge(5,2,(9,1000)),
Edge(5,3,(3,1000)),
Edge(5,4,(3,1000)),
Edge(5,6,(9,1000)),
Edge(5,7,(6,1000)),
Edge(5,8,(5,1000)),
Edge(5,9,(1,1000)),
Edge(5,10,(3,1000)),
Edge(5,11,(1,1000)),
Edge(5,12,(1,1000)),
Edge(5,13,(9,1000)),
Edge(5,14,(6,1000)),
Edge(5,15,(9,1000)),
Edge(5,16,(8,1000)),
Edge(5,17,(7,1000)),
Edge(5,18,(8,1000)),
Edge(5,19,(10,1000)),
Edge(5,20,(3,1000)),
Edge(5,21,(6,1000)),
Edge(5,22,(8,1000)),
Edge(5,23,(8,1000)),
Edge(5,24,(10,1000)),
Edge(5,25,(10,1000)),
Edge(6,1,(2,1000)),
Edge(6,2,(2,1000)),
Edge(6,3,(3,1000)),
Edge(6,4,(3,1000)),
Edge(6,5,(9,1000)),
Edge(6,7,(5,1000)),
Edge(6,8,(8,1000)),
Edge(6,9,(10,1000)),
Edge(6,10,(3,1000)),
Edge(6,11,(9,1000)),
Edge(6,12,(6,1000)),
Edge(6,13,(7,1000)),
Edge(6,14,(7,1000)),
Edge(6,15,(10,1000)),
Edge(6,16,(2,1000)),
Edge(6,17,(4,1000)),
Edge(6,18,(8,1000)),
Edge(6,19,(8,1000)),
Edge(6,20,(2,1000)),
Edge(6,21,(9,1000)),
Edge(6,22,(4,1000)),
Edge(6,23,(8,1000)),
Edge(6,24,(1,1000)),
Edge(6,25,(10,1000)),
Edge(7,1,(5,1000)),
Edge(7,2,(10,1000)),
Edge(7,3,(1,1000)),
Edge(7,4,(3,1000)),
Edge(7,5,(6,1000)),
Edge(7,6,(5,1000)),
Edge(7,8,(4,1000)),
Edge(7,9,(7,1000)),
Edge(7,10,(9,1000)),
Edge(7,11,(1,1000)),
Edge(7,12,(1,1000)),
Edge(7,13,(10,1000)),
Edge(7,14,(7,1000)),
Edge(7,15,(5,1000)),
Edge(7,16,(2,1000)),
Edge(7,17,(10,1000)),
Edge(7,18,(6,1000)),
Edge(7,19,(3,1000)),
Edge(7,20,(5,1000)),
Edge(7,21,(8,1000)),
Edge(7,22,(3,1000)),
Edge(7,23,(9,1000)),
Edge(7,24,(7,1000)),
Edge(7,25,(5,1000)),
Edge(8,1,(4,1000)),
Edge(8,2,(7,1000)),
Edge(8,3,(7,1000)),
Edge(8,4,(1,1000)),
Edge(8,5,(5,1000)),
Edge(8,6,(8,1000)),
Edge(8,7,(4,1000)),
Edge(8,9,(5,1000)),
Edge(8,10,(6,1000)),
Edge(8,11,(7,1000)),
Edge(8,12,(3,1000)),
Edge(8,13,(9,1000)),
Edge(8,14,(8,1000)),
Edge(8,15,(8,1000)),
Edge(8,16,(10,1000)),
Edge(8,17,(8,1000)),
Edge(8,18,(3,1000)),
Edge(8,19,(1,1000)),
Edge(8,20,(7,1000)),
Edge(8,21,(8,1000)),
Edge(8,22,(8,1000)),
Edge(8,23,(1,1000)),
Edge(8,24,(8,1000)),
Edge(8,25,(4,1000)),
Edge(9,1,(9,1000)),
Edge(9,2,(10,1000)),
Edge(9,3,(10,1000)),
Edge(9,4,(4,1000)),
Edge(9,5,(1,1000)),
Edge(9,6,(10,1000)),
Edge(9,7,(7,1000)),
Edge(9,8,(5,1000)),
Edge(9,10,(2,1000)),
Edge(9,11,(5,1000)),
Edge(9,12,(4,1000)),
Edge(9,13,(1,1000)),
Edge(9,14,(2,1000)),
Edge(9,15,(5,1000)),
Edge(9,16,(6,1000)),
Edge(9,17,(1,1000)),
Edge(9,18,(9,1000)),
Edge(9,19,(7,1000)),
Edge(9,20,(10,1000)),
Edge(9,21,(4,1000)),
Edge(9,22,(1,1000)),
Edge(9,23,(9,1000)),
Edge(9,24,(9,1000)),
Edge(9,25,(8,1000)),
Edge(10,1,(8,1000)),
Edge(10,2,(3,1000)),
Edge(10,3,(7,1000)),
Edge(10,4,(4,1000)),
Edge(10,5,(3,1000)),
Edge(10,6,(3,1000)),
Edge(10,7,(9,1000)),
Edge(10,8,(6,1000)),
Edge(10,9,(2,1000)),
Edge(10,11,(10,1000)),
Edge(10,12,(5,1000)),
Edge(10,13,(3,1000)),
Edge(10,14,(6,1000)),
Edge(10,15,(5,1000)),
Edge(10,16,(6,1000)),
Edge(10,17,(3,1000)),
Edge(10,18,(5,1000)),
Edge(10,19,(7,1000)),
Edge(10,20,(6,1000)),
Edge(10,21,(6,1000)),
Edge(10,22,(3,1000)),
Edge(10,23,(10,1000)),
Edge(10,24,(7,1000)),
Edge(10,25,(2,1000)),
Edge(11,1,(4,1000)),
Edge(11,2,(5,1000)),
Edge(11,3,(10,1000)),
Edge(11,4,(6,1000)),
Edge(11,5,(1,1000)),
Edge(11,6,(9,1000)),
Edge(11,7,(1,1000)),
Edge(11,8,(7,1000)),
Edge(11,9,(5,1000)),
Edge(11,10,(10,1000)),
Edge(11,12,(3,1000)),
Edge(11,13,(1,1000)),
Edge(11,14,(6,1000)),
Edge(11,15,(8,1000)),
Edge(11,16,(9,1000)),
Edge(11,17,(4,1000)),
Edge(11,18,(6,1000)),
Edge(11,19,(4,1000)),
Edge(11,20,(1,1000)),
Edge(11,21,(7,1000)),
Edge(11,22,(6,1000)),
Edge(11,23,(4,1000)),
Edge(11,24,(9,1000)),
Edge(11,25,(6,1000)),
Edge(12,1,(3,1000)),
Edge(12,2,(2,1000)),
Edge(12,3,(5,1000)),
Edge(12,4,(10,1000)),
Edge(12,5,(1,1000)),
Edge(12,6,(6,1000)),
Edge(12,7,(1,1000)),
Edge(12,8,(3,1000)),
Edge(12,9,(4,1000)),
Edge(12,10,(5,1000)),
Edge(12,11,(3,1000)),
Edge(12,13,(9,1000)),
Edge(12,14,(4,1000)),
Edge(12,15,(8,1000)),
Edge(12,16,(1,1000)),
Edge(12,17,(2,1000)),
Edge(12,18,(7,1000)),
Edge(12,19,(8,1000)),
Edge(12,20,(4,1000)),
Edge(12,21,(8,1000)),
Edge(12,22,(7,1000)),
Edge(12,23,(6,1000)),
Edge(12,24,(7,1000)),
Edge(12,25,(1,1000)),
Edge(13,1,(10,1000)),
Edge(13,2,(10,1000)),
Edge(13,3,(6,1000)),
Edge(13,4,(4,1000)),
Edge(13,5,(9,1000)),
Edge(13,6,(7,1000)),
Edge(13,7,(10,1000)),
Edge(13,8,(9,1000)),
Edge(13,9,(1,1000)),
Edge(13,10,(3,1000)),
Edge(13,11,(1,1000)),
Edge(13,12,(9,1000)),
Edge(13,14,(6,1000)),
Edge(13,15,(1,1000)),
Edge(13,16,(4,1000)),
Edge(13,17,(8,1000)),
Edge(13,18,(7,1000)),
Edge(13,19,(10,1000)),
Edge(13,20,(1,1000)),
Edge(13,21,(3,1000)),
Edge(13,22,(7,1000)),
Edge(13,23,(9,1000)),
Edge(13,24,(2,1000)),
Edge(13,25,(2,1000)),
Edge(14,1,(9,1000)),
Edge(14,2,(5,1000)),
Edge(14,3,(9,1000)),
Edge(14,4,(1,1000)),
Edge(14,5,(6,1000)),
Edge(14,6,(7,1000)),
Edge(14,7,(7,1000)),
Edge(14,8,(8,1000)),
Edge(14,9,(2,1000)),
Edge(14,10,(6,1000)),
Edge(14,11,(6,1000)),
Edge(14,12,(4,1000)),
Edge(14,13,(6,1000)),
Edge(14,15,(6,1000)),
Edge(14,16,(10,1000)),
Edge(14,17,(10,1000)),
Edge(14,18,(2,1000)),
Edge(14,19,(5,1000)),
Edge(14,20,(8,1000)),
Edge(14,21,(10,1000)),
Edge(14,22,(1,1000)),
Edge(14,23,(2,1000)),
Edge(14,24,(9,1000)),
Edge(14,25,(1,1000)),
Edge(15,1,(1,1000)),
Edge(15,2,(2,1000)),
Edge(15,3,(3,1000)),
Edge(15,4,(4,1000)),
Edge(15,5,(9,1000)),
Edge(15,6,(10,1000)),
Edge(15,7,(5,1000)),
Edge(15,8,(8,1000)),
Edge(15,9,(5,1000)),
Edge(15,10,(5,1000)),
Edge(15,11,(8,1000)),
Edge(15,12,(8,1000)),
Edge(15,13,(1,1000)),
Edge(15,14,(6,1000)),
Edge(15,16,(7,1000)),
Edge(15,17,(3,1000)),
Edge(15,18,(2,1000)),
Edge(15,19,(5,1000)),
Edge(15,20,(8,1000)),
Edge(15,21,(7,1000)),
Edge(15,22,(1,1000)),
Edge(15,23,(4,1000)),
Edge(15,24,(2,1000)),
Edge(15,25,(1,1000)),
Edge(16,1,(5,1000)),
Edge(16,2,(1,1000)),
Edge(16,3,(4,1000)),
Edge(16,4,(6,1000)),
Edge(16,5,(8,1000)),
Edge(16,6,(2,1000)),
Edge(16,7,(2,1000)),
Edge(16,8,(10,1000)),
Edge(16,9,(6,1000)),
Edge(16,10,(6,1000)),
Edge(16,11,(9,1000)),
Edge(16,12,(1,1000)),
Edge(16,13,(4,1000)),
Edge(16,14,(10,1000)),
Edge(16,15,(7,1000)),
Edge(16,17,(2,1000)),
Edge(16,18,(3,1000)),
Edge(16,19,(3,1000)),
Edge(16,20,(6,1000)),
Edge(16,21,(1,1000)),
Edge(16,22,(5,1000)),
Edge(16,23,(8,1000)),
Edge(16,24,(4,1000)),
Edge(16,25,(8,1000)),
Edge(17,1,(7,1000)),
Edge(17,2,(10,1000)),
Edge(17,3,(6,1000)),
Edge(17,4,(2,1000)),
Edge(17,5,(7,1000)),
Edge(17,6,(4,1000)),
Edge(17,7,(10,1000)),
Edge(17,8,(8,1000)),
Edge(17,9,(1,1000)),
Edge(17,10,(3,1000)),
Edge(17,11,(4,1000)),
Edge(17,12,(2,1000)),
Edge(17,13,(8,1000)),
Edge(17,14,(10,1000)),
Edge(17,15,(3,1000)),
Edge(17,16,(2,1000)),
Edge(17,18,(3,1000)),
Edge(17,19,(5,1000)),
Edge(17,20,(5,1000)),
Edge(17,21,(1,1000)),
Edge(17,22,(5,1000)),
Edge(17,23,(3,1000)),
Edge(17,24,(1,1000)),
Edge(17,25,(7,1000)),
Edge(18,1,(1,1000)),
Edge(18,2,(10,1000)),
Edge(18,3,(10,1000)),
Edge(18,4,(3,1000)),
Edge(18,5,(8,1000)),
Edge(18,6,(8,1000)),
Edge(18,7,(6,1000)),
Edge(18,8,(3,1000)),
Edge(18,9,(9,1000)),
Edge(18,10,(5,1000)),
Edge(18,11,(6,1000)),
Edge(18,12,(7,1000)),
Edge(18,13,(7,1000)),
Edge(18,14,(2,1000)),
Edge(18,15,(2,1000)),
Edge(18,16,(3,1000)),
Edge(18,17,(3,1000)),
Edge(18,19,(3,1000)),
Edge(18,20,(10,1000)),
Edge(18,21,(1,1000)),
Edge(18,22,(7,1000)),
Edge(18,23,(8,1000)),
Edge(18,24,(2,1000)),
Edge(18,25,(10,1000)),
Edge(19,1,(4,1000)),
Edge(19,2,(10,1000)),
Edge(19,3,(8,1000)),
Edge(19,4,(8,1000)),
Edge(19,5,(10,1000)),
Edge(19,6,(8,1000)),
Edge(19,7,(3,1000)),
Edge(19,8,(1,1000)),
Edge(19,9,(7,1000)),
Edge(19,10,(7,1000)),
Edge(19,11,(4,1000)),
Edge(19,12,(8,1000)),
Edge(19,13,(10,1000)),
Edge(19,14,(5,1000)),
Edge(19,15,(5,1000)),
Edge(19,16,(3,1000)),
Edge(19,17,(5,1000)),
Edge(19,18,(3,1000)),
Edge(19,20,(10,1000)),
Edge(19,21,(6,1000)),
Edge(19,22,(5,1000)),
Edge(19,23,(9,1000)),
Edge(19,24,(4,1000)),
Edge(19,25,(10,1000)),
Edge(20,1,(8,1000)),
Edge(20,2,(1,1000)),
Edge(20,3,(10,1000)),
Edge(20,4,(3,1000)),
Edge(20,5,(3,1000)),
Edge(20,6,(2,1000)),
Edge(20,7,(5,1000)),
Edge(20,8,(7,1000)),
Edge(20,9,(10,1000)),
Edge(20,10,(6,1000)),
Edge(20,11,(1,1000)),
Edge(20,12,(4,1000)),
Edge(20,13,(1,1000)),
Edge(20,14,(8,1000)),
Edge(20,15,(8,1000)),
Edge(20,16,(6,1000)),
Edge(20,17,(5,1000)),
Edge(20,18,(10,1000)),
Edge(20,19,(10,1000)),
Edge(20,21,(5,1000)),
Edge(20,22,(8,1000)),
Edge(20,23,(8,1000)),
Edge(20,24,(10,1000)),
Edge(20,25,(5,1000)),
Edge(21,1,(9,1000)),
Edge(21,2,(1,1000)),
Edge(21,3,(8,1000)),
Edge(21,4,(1,1000)),
Edge(21,5,(6,1000)),
Edge(21,6,(9,1000)),
Edge(21,7,(8,1000)),
Edge(21,8,(8,1000)),
Edge(21,9,(4,1000)),
Edge(21,10,(6,1000)),
Edge(21,11,(7,1000)),
Edge(21,12,(8,1000)),
Edge(21,13,(3,1000)),
Edge(21,14,(10,1000)),
Edge(21,15,(7,1000)),
Edge(21,16,(1,1000)),
Edge(21,17,(1,1000)),
Edge(21,18,(1,1000)),
Edge(21,19,(6,1000)),
Edge(21,20,(5,1000)),
Edge(21,22,(9,1000)),
Edge(21,23,(6,1000)),
Edge(21,24,(6,1000)),
Edge(21,25,(2,1000)),
Edge(22,1,(10,1000)),
Edge(22,2,(4,1000)),
Edge(22,3,(10,1000)),
Edge(22,4,(3,1000)),
Edge(22,5,(8,1000)),
Edge(22,6,(4,1000)),
Edge(22,7,(3,1000)),
Edge(22,8,(8,1000)),
Edge(22,9,(1,1000)),
Edge(22,10,(3,1000)),
Edge(22,11,(6,1000)),
Edge(22,12,(7,1000)),
Edge(22,13,(7,1000)),
Edge(22,14,(1,1000)),
Edge(22,15,(1,1000)),
Edge(22,16,(5,1000)),
Edge(22,17,(5,1000)),
Edge(22,18,(7,1000)),
Edge(22,19,(5,1000)),
Edge(22,20,(8,1000)),
Edge(22,21,(9,1000)),
Edge(22,23,(4,1000)),
Edge(22,24,(1,1000)),
Edge(22,25,(4,1000)),
Edge(23,1,(7,1000)),
Edge(23,2,(3,1000)),
Edge(23,3,(10,1000)),
Edge(23,4,(7,1000)),
Edge(23,5,(8,1000)),
Edge(23,6,(8,1000)),
Edge(23,7,(9,1000)),
Edge(23,8,(1,1000)),
Edge(23,9,(9,1000)),
Edge(23,10,(10,1000)),
Edge(23,11,(4,1000)),
Edge(23,12,(6,1000)),
Edge(23,13,(9,1000)),
Edge(23,14,(2,1000)),
Edge(23,15,(4,1000)),
Edge(23,16,(8,1000)),
Edge(23,17,(3,1000)),
Edge(23,18,(8,1000)),
Edge(23,19,(9,1000)),
Edge(23,20,(8,1000)),
Edge(23,21,(6,1000)),
Edge(23,22,(4,1000)),
Edge(23,24,(3,1000)),
Edge(23,25,(4,1000)),
Edge(24,1,(4,1000)),
Edge(24,2,(7,1000)),
Edge(24,3,(1,1000)),
Edge(24,4,(2,1000)),
Edge(24,5,(10,1000)),
Edge(24,6,(1,1000)),
Edge(24,7,(7,1000)),
Edge(24,8,(8,1000)),
Edge(24,9,(9,1000)),
Edge(24,10,(7,1000)),
Edge(24,11,(9,1000)),
Edge(24,12,(7,1000)),
Edge(24,13,(2,1000)),
Edge(24,14,(9,1000)),
Edge(24,15,(2,1000)),
Edge(24,16,(4,1000)),
Edge(24,17,(1,1000)),
Edge(24,18,(2,1000)),
Edge(24,19,(4,1000)),
Edge(24,20,(10,1000)),
Edge(24,21,(6,1000)),
Edge(24,22,(1,1000)),
Edge(24,23,(3,1000)),
Edge(24,25,(3,1000)),
Edge(25,1,(2,1000)),
Edge(25,2,(1,1000)),
Edge(25,3,(5,1000)),
Edge(25,4,(7,1000)),
Edge(25,5,(10,1000)),
Edge(25,6,(10,1000)),
Edge(25,7,(5,1000)),
Edge(25,8,(4,1000)),
Edge(25,9,(8,1000)),
Edge(25,10,(2,1000)),
Edge(25,11,(6,1000)),
Edge(25,12,(1,1000)),
Edge(25,13,(2,1000)),
Edge(25,14,(1,1000)),
Edge(25,15,(1,1000)),
Edge(25,16,(8,1000)),
Edge(25,17,(7,1000)),
Edge(25,18,(10,1000)),
Edge(25,19,(10,1000)),
Edge(25,20,(5,1000)),
Edge(25,21,(2,1000)),
Edge(25,22,(4,1000)),
Edge(25,23,(4,1000)),
Edge(25,24,(3,1000)))
		val sedgeRDD: RDD[Edge[(Int,Int)]] = sc.parallelize(sedgeArray)
		val gs: Graph[(String, Int), (Int, Int)] = Graph(svertexRDD, sedgeRDD)

		var vvertexArray = Array((1L,("1",3)),(2L,("2",9)),(3L,("3",4)),(4L,("4",7)),(5L,("5",4)))
		val vvertexRDD: RDD[(VertexId, (String, Int))] = sc.parallelize(vvertexArray)	

		var vedgeArray = Array( Edge(1L,2L,(9,1000)),
					Edge(1L,3L,(5,1000)),
					Edge(1L,4L,(1,1000)),
					Edge(1L,5L,(1,1000)),
					Edge(2L,1L,(9,1000)),
					Edge(2L,3L,(4,1000)),
					Edge(2L,4L,(2,1000)),
					Edge(2L,5L,(1,1000)),
					Edge(3L,1L,(5,1000)),
					Edge(3L,2L,(4,1000)),
					Edge(3L,4L,(3,1000)),
					Edge(3L,5L,(2,1000)),
					Edge(4L,1L,(1,1000)),
					Edge(4L,2L,(2,1000)),
					Edge(4L,3L,(3,1000)),
					Edge(4L,5L,(2,1000)),
					Edge(5L,1L,(1,1000)),
					Edge(5L,2L,(1,1000)),
					Edge(5L,3L,(2,1000)),
					Edge(5L,4L,(2,1000)))
		val vedgeRDD: RDD[Edge[(Int,Int)]] = sc.parallelize(vedgeArray)
                val gv: Graph[(String, Int), (Int, Int)] = Graph(vvertexRDD, vedgeRDD)

		// --------------------Define Source and Destination----------------------------------------------------
		val Source = (11, 3)
		val Destination = (9, 4)

		val pw = new PrintWriter(new File("Ergebnisse5of25.txt" ))
		for(i <- 1 until 2) {
			val numPartitions : Array[Int] = Array(1)
			//val numPartitions : Array[Int] = Array(4, 4, 4, 4, 32, 32, 32, 32, 64, 64, 64, 64, 96, 96, 96, 96, 128, 128, 128, 128, 256, 256, 256, 256, 512, 512, 512, 512, 1024, 1024, 1024, 1024)
			val t1 = System.nanoTime
			val lp = new SolveMCF3(gs, gv, Source, Destination, sc=sc, numPartitions(i-1))
			val f = lp.SolveMCFinLPResult()
			println("Optimal Solution = " + f)
			val duration = (System.nanoTime - t1) / 1e9d
			println("Duration: " + duration)
			pw.write("Duration" + i + " with Partitions " + numPartitions(i-1) + ": " + duration + "\n")
		}
		pw.close
	}
}
		
